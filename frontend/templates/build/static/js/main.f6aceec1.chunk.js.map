{"version":3,"sources":["assets/images/user-img-placeholder.jpeg","components/charts-theme.js","components/styled-components.js","components/config.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","window","FusionCharts","register","name","theme","base","chart","bgAlpha","canvasBgAlpha","baseFont","baseFontSize","baseFontBold","chartBottomMargin","chartTopMargin","chartLeftMargin","chartRightMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","tooltipPadding","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","bar2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","captionFontColor","paletteColors","valuePadding","yAxisName","yAxisNameAlpha","yAxisNameFontSize","yAxisNamePadding","valueFontBold","valueFontSize","plotToolText","captionAlignment","captionPadding","doughnut2d","showLabels","use3DLighting","showPlotBorder","defaultCenterLabel","pieRadius","doughnutRadius","showTooltip","enableRotation","enableSlicing","startingAngle","geo","legendScaleLineThickness","legendaxisborderalpha","legendShadow","plotFillAlpha","borderColor","borderThickness","nullEntityColor","nullEntityAlpha","entityFillHoverColor","entityToolText","Container","styled","div","_templateObject","Nav","nav","_templateObject2","config","ReactFC","fcRoot","Charts","Maps","BrazilRegion","concat","BRAZIL_MAP_ID","AC","AL","AP","AM","BA","CE","DF","ES","GO","MA","MT","MS","MG","PA","PB","PR","PE","PI","RJ","RN","RS","RO","RR","SC","SP","SE","TO","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","axios","get","then","res","data","setState","total_revenue","total_customer","total_order","top_products","JSON","parse","top_customers","trend_seller","trend_region","data_trend_seller","data_trend_region","i","push","label","nama","value","displayValue","ordersTrendStore","console","log","id","city_name","toUpperCase","ordersTrendRegion","stop","updateDashboard","event","getData","selectedValue","state","jumlah_terjual","total_beli","react_default","createElement","className","src","UserImg","alt","dist_default","options","dropdownOptions","onChange","placeholder","class","map","val","idx","scope","style","minHeight","ReactFC_default","type","width","height","dataFormat","containerBackgroundOpacity","dataEmptyMessage","dataSource","caption","subCaption","colorrange","code","minvalue","gradient","color","minValue","maxvalue","Component","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6aceec1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-img-placeholder.be2ed151.jpeg\";","window.FusionCharts.register(\"theme\", {\r\n    name: \"ecommerce\",\r\n    theme: {\r\n        base: {\r\n            chart: {\r\n                bgAlpha: \"0\",\r\n                canvasBgAlpha: \"0\",\r\n                baseFont: \"basefont-regular\",\r\n                baseFontSize: \"14\",\r\n                baseFontBold: \"0\",\r\n                chartBottomMargin: \"0\",\r\n                chartTopMargin: \"0\",\r\n                chartLeftMargin: \"0\",\r\n                chartRightMargin: \"0\",\r\n                canvasBottomMargin: \"0\",\r\n                canvasTopMargin: \"0\",\r\n                canvasRightMargin: \"0\",\r\n                canvasLeftMargin: \"0\",\r\n                showBorder: \"0\",\r\n                showCanvasBorder: \"0\",\r\n                baseFontColor: \"#ffffff\",\r\n                captionFontBold: \"0\",\r\n                captionFontSize: \"14\",\r\n                subCaptionFontSize: \"14\",\r\n                tooltipColor: \"#ffffff\",\r\n                tooltipBgColor: \"#000000\",\r\n                tooltipBgAlpha: \"60\",\r\n                tooltipPadding: \"5\",\r\n                toolTipBorderAlpha: \"10\",\r\n                toolTipBorderRadius: \"3\",\r\n                showValues: \"0\",\r\n                legendBgAlpha: \"0\",\r\n                legendBorderAlpha: \"0\",\r\n                legendBorderThickness: \"0\",\r\n            },\r\n        },\r\n\r\n        bar2d: {\r\n            chart: {\r\n                placeValuesInside: \"0\",\r\n                usePlotGradientColor: \"0\",\r\n                showAlternateVGridColor: \"0\",\r\n                chartLeftMargin: \"5\",\r\n                canvasLeftMargin: \"5\",\r\n                divLineAlpha: \"10\",\r\n                divLineColor: \"#ffffff\",\r\n                captionFontColor: \"#8091ab\",\r\n                paletteColors: \"#F4D90E\",\r\n                valuePadding: \"5\",\r\n                yAxisName: \"Orders\",\r\n                yAxisNameAlpha: \"50\",\r\n                yAxisNameFontSize: \"12\",\r\n                yAxisNamePadding: \"20\",\r\n                valueFontBold: \"0\",\r\n                valueFontSize: \"12\",\r\n                plotToolText: \"<div>$label<br><b>$value orders</b>\",\r\n                captionAlignment: \"left\",\r\n                captionPadding: \"20\",\r\n            },\r\n        },\r\n\r\n        doughnut2d: {\r\n            chart: {\r\n                captionFontSize: \"14\",\r\n                captionFontColor: \"#8091ab\",\r\n                showLabels: \"0\",\r\n                showValues: \"0\",\r\n                use3DLighting: \"0\",\r\n                showPlotBorder: \"0\",\r\n                defaultCenterLabel: \"75%\",\r\n                pieRadius: \"45\",\r\n                doughnutRadius: \"33\",\r\n                showTooltip: \"0\",\r\n                enableRotation: \"0\",\r\n                enableSlicing: \"0\",\r\n                startingAngle: \"90\",\r\n            },\r\n        },\r\n\r\n        geo: {\r\n            chart: {\r\n                captionFontSize: \"14\",\r\n                captionFontColor: \"#8091ab\",\r\n                legendScaleLineThickness: \"0\",\r\n                legendaxisborderalpha: \"0\",\r\n                legendShadow: \"0\",\r\n                plotFillAlpha: \"85\",\r\n                showBorder: \"1\",\r\n                borderColor: \"#ffffff\",\r\n                borderThickness: \"0.3\",\r\n                nullEntityColor: \"#17202e\",\r\n                nullEntityAlpha: \"50\",\r\n                entityFillHoverColor: \"#17202e\",\r\n                captionAlignment: \"left\",\r\n                entityToolText: \"<div>$lname<br><b>$value orders</b>\",\r\n                chartLeftMargin: \"40\",\r\n            },\r\n        },\r\n    },\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Nav = styled.nav``;","\r\nexport default {\r\n    apiKey: 'AIzaSyD3Aaz9XlXFDRxjc8GrojP9_SGV86fzSnM',\r\n    spreadsheetId: '1sCgmzBIq2K9jUckLuYSWbDq4CuNUfdtuE6a5xI3I5Hw'\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Nav } from \"./styled-components\";\r\n\r\n// fusioncharts\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport Maps from \"fusioncharts/fusioncharts.maps\";\r\nimport BrazilRegion from \"fusionmaps/maps/es/fusioncharts.brazil\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport \"./charts-theme\";\r\n\r\nimport config from \"./config\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport formatNum from \"./format-number\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, Maps, BrazilRegion);\r\n\r\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\r\nconst BRAZIL_MAP_ID = {\r\n    AC: \"001\",\r\n    AL: \"002\",\r\n    AP: \"003\",\r\n    AM: \"004\",\r\n    BA: \"005\",\r\n    CE: \"006\",\r\n    DF: \"007\",\r\n    ES: \"008\",\r\n    GO: \"009\",\r\n    MA: \"010\",\r\n    MT: \"011\",\r\n    MS: \"012\",\r\n    MG: \"013\",\r\n    PA: \"014\",\r\n    PB: \"015\",\r\n    PR: \"016\",\r\n    PE: \"017\",\r\n    PI: \"018\",\r\n    RJ: \"019\",\r\n    RN: \"020\",\r\n    RS: \"021\",\r\n    RO: \"022\",\r\n    RR: \"023\",\r\n    SC: \"024\",\r\n    SP: \"025\",\r\n    SE: \"026\",\r\n    TO: \"027\",\r\n};\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // items: [],\r\n            // dropdownOptions: [],\r\n            // selectedValue: null,\r\n            // amRevenue: null,\r\n            // ebRevenue: null,\r\n            // etRevenue: null,\r\n            // totalRevenue: null,\r\n            // productViews: null,\r\n            // purchaseRate: \" \",\r\n            // checkoutRate: \" \",\r\n            // abandonedRate: \" \",\r\n            ordersTrendStore: [],\r\n            ordersTrendRegion: [],\r\n            total_revenue: null,\r\n            total_customer: null,\r\n            total_order: null,\r\n            top_products: [{ nama: \"\", jumlah_terjual: null }],\r\n            top_customers: [{ nama: \"\", total_beli: null }],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData = async () => {\r\n        await axios.get(`http://localhost:8000/Dashboard/`).then((res) => {\r\n            const data = res.data[0];\r\n            this.setState({\r\n                total_revenue: data.total_revenue,\r\n                total_customer: data.total_customer,\r\n                total_order: data.total_order,\r\n                top_products: JSON.parse(data.top_products),\r\n                top_customers: JSON.parse(data.top_customers),\r\n            });\r\n            const trend_seller = [];\r\n            const trend_region = [];\r\n            const data_trend_seller = JSON.parse(data.trend_seller);\r\n            const data_trend_region = JSON.parse(data.trend_region);\r\n            for (let i = 0; i < 5; i++) {\r\n                trend_seller.push({\r\n                    label: data_trend_seller[i].nama,\r\n                    value: data_trend_seller[i].total_order,\r\n                    displayValue: `${data_trend_seller[i].total_order} orders`,\r\n                });\r\n            }\r\n            this.setState({ ordersTrendStore: trend_seller });\r\n            for (let i = 0; i < 27; i++) {\r\n                console.log(data_trend_region[i]);\r\n                trend_region.push({\r\n                    id:\r\n                        BRAZIL_MAP_ID[\r\n                            data_trend_region[i].city_name.toUpperCase()\r\n                        ],\r\n                    value: data_trend_region[i].total_order,\r\n                    displayValue: `${data_trend_region[\r\n                        i\r\n                    ].city_name.toUpperCase()}`,\r\n                });\r\n            }\r\n            this.setState({ ordersTrendRegion: trend_region });\r\n            console.log(trend_region);\r\n        });\r\n    };\r\n\r\n    // getData = (arg) => {\r\n    //     // google sheets data\r\n    //     const arr = this.state.items;\r\n    //     const arrLen = arr.length;\r\n\r\n    //     // kpi's\r\n    //     // amazon revenue\r\n    //     let amRevenue = 0;\r\n    //     //ebay revenue\r\n    //     let ebRevenue = 0;\r\n    //     // etsy revenue\r\n    //     let etRevenue = 0;\r\n    //     // total revenue\r\n    //     let totalRevenue = 0;\r\n    //     // product views\r\n    //     let productViews = 0;\r\n    //     // purchase rate\r\n    //     let purchaseRate = 0;\r\n    //     // checkout rate\r\n    //     let checkoutRate = 0;\r\n    //     // abandoned rate\r\n    //     let abandonedRate = 0;\r\n    //     // order trend by brand\r\n    //     let ordersTrendStore = [];\r\n    //     // order trend by region\r\n    //     let ordersTrendRegion = [];\r\n    //     let orderesTrendrr = 0;\r\n    //     let orderesTrendap = 0;\r\n    //     let orderesTrendam = 0;\r\n    //     let orderesTrendpa = 0;\r\n    //     let orderesTrendac = 0;\r\n    //     let orderesTrendro = 0;\r\n    //     let orderesTrendmt = 0;\r\n    //     let orderesTrendto = 0;\r\n    //     let orderesTrendma = 0;\r\n    //     let orderesTrendpi = 0;\r\n    //     let orderesTrendce = 0;\r\n    //     let orderesTrendrn = 0;\r\n    //     let orderesTrendpb = 0;\r\n    //     let orderesTrendpe = 0;\r\n    //     let orderesTrendal = 0;\r\n    //     let orderesTrendse = 0;\r\n    //     let orderesTrendba = 0;\r\n    //     let orderesTrendgo = 0;\r\n    //     let orderesTrenddf = 0;\r\n    //     let orderesTrendmg = 0;\r\n    //     let orderesTrendms = 0;\r\n    //     let orderesTrendes = 0;\r\n    //     let orderesTrendrj = 0;\r\n    //     let orderesTrendsp = 0;\r\n    //     let orderesTrendpr = 0;\r\n    //     let orderesTrendsc = 0;\r\n    //     let orderesTrendrs = 0;\r\n\r\n    //     let selectedValue = null;\r\n\r\n    //     for (let i = 0; i < arrLen; i++) {\r\n    //         if (arg === arr[i][\"month\"]) {\r\n    //             if (arr[i][\"source\"] === \"AM\") {\r\n    //                 amRevenue += parseInt(arr[i].revenue);\r\n    //                 ordersTrendStore.push({\r\n    //                     label: \"Amazon\",\r\n    //                     value: arr[i].orders,\r\n    //                     displayValue: `${arr[i].orders} orders`,\r\n    //                 });\r\n    //             } else if (arr[i][\"source\"] === \"EB\") {\r\n    //                 ebRevenue += parseInt(arr[i].revenue);\r\n    //                 ordersTrendStore.push({\r\n    //                     label: \"Ebay\",\r\n    //                     value: arr[i].orders,\r\n    //                     displayValue: `${arr[i].orders} orders`,\r\n    //                 });\r\n    //             } else if (arr[i][\"source\"] === \"ET\") {\r\n    //                 etRevenue += parseInt(arr[i].revenue);\r\n    //                 ordersTrendStore.push({\r\n    //                     label: \"Etsy\",\r\n    //                     value: arr[i].orders,\r\n    //                     displayValue: `${arr[i].orders} orders`,\r\n    //                 });\r\n    //             }\r\n    //             productViews += parseInt(arr[i].product_views);\r\n    //             purchaseRate += parseInt(arr[i].purchase_rate / 3);\r\n    //             checkoutRate += parseInt(arr[i].checkout_rate / 3);\r\n    //             abandonedRate += parseInt(arr[i].abandoned_rate / 3);\r\n    //             orderesTrendrr += parseInt(arr[i].orders_rr);\r\n    //             orderesTrendap += parseInt(arr[i].orders_ap);\r\n    //             orderesTrendam += parseInt(arr[i].orders_am);\r\n    //             orderesTrendpa += parseInt(arr[i].orders_pa);\r\n    //             orderesTrendac += parseInt(arr[i].orders_ac);\r\n    //             orderesTrendro += parseInt(arr[i].orders_ro);\r\n    //             orderesTrendmt += parseInt(arr[i].orders_mt);\r\n    //             orderesTrendto += parseInt(arr[i].orders_to);\r\n    //             orderesTrendma += parseInt(arr[i].orders_ma);\r\n    //             orderesTrendpi += parseInt(arr[i].orders_pi);\r\n    //             orderesTrendce += parseInt(arr[i].orders_ce);\r\n    //             orderesTrendrn += parseInt(arr[i].orders_rn);\r\n    //             orderesTrendpb += parseInt(arr[i].orders_pb);\r\n    //             orderesTrendpe += parseInt(arr[i].orders_pe);\r\n    //             orderesTrendal += parseInt(arr[i].orders_al);\r\n    //             orderesTrendse += parseInt(arr[i].orders_se);\r\n    //             orderesTrendba += parseInt(arr[i].orders_ba);\r\n    //             orderesTrendgo += parseInt(arr[i].orders_go);\r\n    //             orderesTrenddf += parseInt(arr[i].orders_df);\r\n    //             orderesTrendmg += parseInt(arr[i].orders_mg);\r\n    //             orderesTrendms += parseInt(arr[i].orders_ms);\r\n    //             orderesTrendes += parseInt(arr[i].orders_es);\r\n    //             orderesTrendrj += parseInt(arr[i].orders_rj);\r\n    //             orderesTrendsp += parseInt(arr[i].orders_sp);\r\n    //             orderesTrendpr += parseInt(arr[i].orders_pr);\r\n    //             orderesTrendsc += parseInt(arr[i].orders_sc);\r\n    //             orderesTrendrs += parseInt(arr[i].orders_rs);\r\n    //         }\r\n    //     }\r\n\r\n    //     totalRevenue = amRevenue + ebRevenue + etRevenue;\r\n    //     ordersTrendRegion.push(\r\n    //         {\r\n    //             id: \"01\",\r\n    //             shortLabel: \"AC\",\r\n    //             value: orderesTrendac,\r\n    //         },\r\n    //         {\r\n    //             id: \"02\",\r\n    //             shortLabel: \"AL\",\r\n    //             value: orderesTrendal,\r\n    //         },\r\n    //         {\r\n    //             id: \"03\",\r\n    //             shortLabel: \"AP\",\r\n    //             value: orderesTrendap,\r\n    //         },\r\n    //         {\r\n    //             id: \"04\",\r\n    //             shortLabel: \"AM\",\r\n    //             value: orderesTrendam,\r\n    //         },\r\n    //         {\r\n    //             id: \"05\",\r\n    //             value: orderesTrendba,\r\n    //         },\r\n    //         {\r\n    //             id: \"06\",\r\n    //             value: orderesTrendce,\r\n    //         },\r\n    //         {\r\n    //             id: \"07\",\r\n    //             value: orderesTrenddf,\r\n    //         },\r\n    //         {\r\n    //             id: \"08\",\r\n    //             value: orderesTrendes,\r\n    //         },\r\n    //         {\r\n    //             id: \"09\",\r\n    //             value: orderesTrendgo,\r\n    //         },\r\n    //         {\r\n    //             id: \"10\",\r\n    //             value: orderesTrendma,\r\n    //         },\r\n    //         {\r\n    //             id: \"11\",\r\n    //             value: orderesTrendmt,\r\n    //         },\r\n    //         {\r\n    //             id: \"12\",\r\n    //             value: orderesTrendms,\r\n    //         },\r\n    //         {\r\n    //             id: \"13\",\r\n    //             value: orderesTrendmg,\r\n    //         },\r\n    //         {\r\n    //             id: \"14\",\r\n    //             value: orderesTrendpa,\r\n    //         },\r\n    //         {\r\n    //             id: \"15\",\r\n    //             value: orderesTrendpb,\r\n    //         },\r\n    //         {\r\n    //             id: \"16\",\r\n    //             value: orderesTrendpr,\r\n    //         },\r\n    //         {\r\n    //             id: \"17\",\r\n    //             value: orderesTrendpe,\r\n    //         },\r\n    //         {\r\n    //             id: \"18\",\r\n    //             value: orderesTrendpi,\r\n    //         },\r\n    //         {\r\n    //             id: \"19\",\r\n    //             value: orderesTrendrj,\r\n    //         },\r\n    //         {\r\n    //             id: \"20\",\r\n    //             value: orderesTrendrn,\r\n    //         },\r\n    //         {\r\n    //             id: \"21\",\r\n    //             value: orderesTrendrs,\r\n    //         },\r\n    //         {\r\n    //             id: \"22\",\r\n    //             value: orderesTrendro,\r\n    //         },\r\n    //         {\r\n    //             id: \"23\",\r\n    //             value: orderesTrendrr,\r\n    //         },\r\n    //         {\r\n    //             id: \"24\",\r\n    //             value: orderesTrendsc,\r\n    //         },\r\n    //         {\r\n    //             id: \"25\",\r\n    //             value: orderesTrendsp,\r\n    //         },\r\n    //         {\r\n    //             id: \"26\",\r\n    //             value: orderesTrendse,\r\n    //         },\r\n    //         {\r\n    //             id: \"27\",\r\n    //             value: orderesTrendto,\r\n    //         }\r\n    //     );\r\n\r\n    //     selectedValue = arg;\r\n\r\n    //     // setting state\r\n    //     this.setState({\r\n    //         amRevenue: formatNum(amRevenue),\r\n    //         ebRevenue: formatNum(ebRevenue),\r\n    //         etRevenue: formatNum(etRevenue),\r\n    //         totalRevenue: formatNum(totalRevenue),\r\n    //         productViews: formatNum(productViews),\r\n    //         purchaseRate: purchaseRate,\r\n    //         checkoutRate: checkoutRate,\r\n    //         abandonedRate: abandonedRate,\r\n    //         ordersTrendStore: ordersTrendStore,\r\n    //         ordersTrendRegion: ordersTrendRegion,\r\n    //         selectedValue: selectedValue,\r\n    //         total_revenue: formatNum(this.state.total_revenue),\r\n    //         total_customer: formatNum(this.state.total_customer),\r\n    //     });\r\n    // };\r\n\r\n    updateDashboard = (event) => {\r\n        this.getData(event.value);\r\n        this.setState({ selectedValue: event.value });\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     fetch(url)\r\n    //         .then((response) => response.json())\r\n    //         .then((data) => {\r\n    //             let batchRowValues = data.valueRanges[0].values;\r\n\r\n    //             const rows = [];\r\n    //             for (let i = 1; i < batchRowValues.length; i++) {\r\n    //                 let rowObject = {};\r\n    //                 for (let j = 0; j < batchRowValues[i].length; j++) {\r\n    //                     rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\r\n    //                 }\r\n    //                 rows.push(rowObject);\r\n    //             }\r\n\r\n    //             // dropdown options\r\n    //             let dropdownOptions = [];\r\n\r\n    //             for (let i = 0; i < rows.length; i++) {\r\n    //                 dropdownOptions.push(rows[i].month);\r\n    //             }\r\n\r\n    //             dropdownOptions = Array.from(\r\n    //                 new Set(dropdownOptions)\r\n    //             ).reverse();\r\n\r\n    //             this.setState(\r\n    //                 {\r\n    //                     items: rows,\r\n    //                     dropdownOptions: dropdownOptions,\r\n    //                     selectedValue: \"Jan 2019\",\r\n    //                 },\r\n    //                 () => this.getData(\"Jan 2019\")\r\n    //             );\r\n    //         });\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.state.ordersTrendRegion);\r\n        return (\r\n            <Container>\r\n                {/* static navbar - top */}\r\n                <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\r\n                    <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\r\n                        Olist Dashboard\r\n                    </Container>\r\n                    <Container className=\"navbar-nav ml-auto\">\r\n                        <Container className=\"user-detail-section\">\r\n                            <span className=\"pr-2\">Hi, Sean</span>\r\n                            <span className=\"img-container\">\r\n                                <img\r\n                                    src={UserImg}\r\n                                    className=\"rounded-circle\"\r\n                                    alt=\"user\"\r\n                                />\r\n                            </span>\r\n                        </Container>\r\n                    </Container>\r\n                </Nav>\r\n\r\n                {/* static navbar - bottom */}\r\n                <Nav className=\"navbar fixed-top nav-secondary is-dark is-light-text\">\r\n                    <Container className=\"text-medium\">Summary</Container>\r\n                    <Container className=\"navbar-nav ml-auto\">\r\n                        <Dropdown\r\n                            className=\"pr-2 custom-dropdown\"\r\n                            options={this.state.dropdownOptions}\r\n                            onChange={this.updateDashboard}\r\n                            value={this.state.selectedValue}\r\n                            placeholder=\"Select an option\"\r\n                        />\r\n                    </Container>\r\n                </Nav>\r\n\r\n                {/* content area start */}\r\n                <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\r\n                    {/* row 1 - revenue */}\r\n                    <Container className=\"row\">\r\n                        <Container className=\"col-lg-4 col-sm-6 is-light-text mb-4\">\r\n                            <Container className=\"card grid-card is-card-dark\">\r\n                                <Container className=\"card-heading\">\r\n                                    <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                                        Total Revenue\r\n                                    </Container>\r\n                                </Container>\r\n\r\n                                <Container className=\"card-value pt-4 text-x-large\">\r\n                                    <span className=\"text-large pr-1\">$</span>\r\n                                    {this.state.total_revenue}\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n\r\n                        <Container className=\"col-lg-4 col-sm-6 is-light-text mb-4\">\r\n                            <Container className=\"card grid-card is-card-dark\">\r\n                                <Container className=\"card-heading\">\r\n                                    <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                                        Total Order\r\n                                    </Container>\r\n                                </Container>\r\n\r\n                                <Container className=\"card-value pt-4 text-x-large\">\r\n                                    <span className=\"text-large pr-1\">$</span>\r\n                                    {this.state.total_order}\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n\r\n                        <Container className=\"col-lg-4 col-sm-6 is-light-text mb-4\">\r\n                            <Container className=\"card grid-card is-card-dark\">\r\n                                <Container className=\"card-heading\">\r\n                                    <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                                        Total Customer\r\n                                    </Container>\r\n                                </Container>\r\n\r\n                                <Container className=\"card-value pt-4 text-x-large\">\r\n                                    <span className=\"text-large pr-1\">$</span>\r\n                                    {this.state.total_customer}\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n                    </Container>\r\n\r\n                    {/* row 2 - conversion */}\r\n                    <Container className=\"row\">\r\n                        <Container className=\"col-md-4 col-lg-6 is-light-text mb-4\">\r\n                            <Container className=\"card grid-card is-card-dark\">\r\n                                <Container className=\"card-heading mb-3\">\r\n                                    <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                                        Top Product\r\n                                    </Container>\r\n                                </Container>\r\n                                <Container className=\"card-value pt-4\">\r\n                                    <table class=\"table table-sm table-dark\">\r\n                                        <tbody>\r\n                                            {this.state.top_products.map(\r\n                                                (val, idx) => (\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">\r\n                                                            {idx + 1}\r\n                                                        </th>\r\n                                                        <td>{val.nama}</td>\r\n                                                        <td>\r\n                                                            {val.jumlah_terjual}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            )}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n\r\n                        <Container className=\"col-md-4 col-lg-6 is-light-text mb-4\">\r\n                            <Container className=\"card grid-card is-card-dark\">\r\n                                <Container className=\"card-heading mb-3\">\r\n                                    <Container className=\"is-dark-text-light letter-spacing text-small\">\r\n                                        Top Customer\r\n                                    </Container>\r\n                                </Container>\r\n                                <Container className=\"card-value pt-4\">\r\n                                    <table class=\"table table-sm table-dark\">\r\n                                        <tbody>\r\n                                            {this.state.top_customers.map(\r\n                                                (val, idx) => (\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">\r\n                                                            {idx + 1}\r\n                                                        </th>\r\n                                                        <td>{val.nama}</td>\r\n                                                        <td>\r\n                                                            {val.total_beli}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            )}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n                    </Container>\r\n\r\n                    {/* row 3 - orders trend */}\r\n                    <Container className=\"row\" style={{ minHeight: \"400px\" }}>\r\n                        <Container className=\"col-md-6 mb-4\">\r\n                            <Container className=\"card is-card-dark chart-card\">\r\n                                <Container className=\"chart-container large full-height\">\r\n                                    <ReactFC\r\n                                        {...{\r\n                                            type: \"bar2d\",\r\n                                            width: \"100%\",\r\n                                            height: \"100%\",\r\n                                            dataFormat: \"json\",\r\n                                            containerBackgroundOpacity: \"0\",\r\n                                            dataEmptyMessage: \"Loading Data...\",\r\n                                            dataSource: {\r\n                                                chart: {\r\n                                                    theme: \"ecommerce\",\r\n                                                    caption: \"Orders Trend\",\r\n                                                    subCaption: \"By Seller\",\r\n                                                },\r\n                                                data: this.state\r\n                                                    .ordersTrendStore,\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n\r\n                        <Container className=\"col-md-6 mb-4\">\r\n                            <Container className=\"card is-card-dark chart-card\">\r\n                                <Container className=\"chart-container large full-height\">\r\n                                    <ReactFC\r\n                                        {...{\r\n                                            type: \"brazil\",\r\n                                            width: \"100%\",\r\n                                            height: \"100%\",\r\n                                            dataFormat: \"json\",\r\n                                            containerBackgroundOpacity: \"0\",\r\n                                            dataEmptyMessage: \"Loading Data...\",\r\n                                            dataSource: {\r\n                                                chart: {\r\n                                                    theme: \"ecommerce\",\r\n                                                    caption: \"Orders Trend\",\r\n                                                    subCaption: \"By Region\",\r\n                                                },\r\n                                                colorrange: {\r\n                                                    code: \"#F64F4B\",\r\n                                                    minvalue: \"0\",\r\n                                                    gradient: \"1\",\r\n                                                    color: [\r\n                                                        {\r\n                                                            minValue: \"0\",\r\n                                                            maxvalue: \"50\",\r\n                                                            code: \"#EDF8B1\",\r\n                                                        },\r\n                                                        {\r\n                                                            minvalue: \"51\",\r\n                                                            maxvalue: \"100\",\r\n                                                            code: \"#18D380\",\r\n                                                        },\r\n                                                    ],\r\n                                                },\r\n                                                data: this.state\r\n                                                    .ordersTrendRegion,\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </Container>\r\n                            </Container>\r\n                        </Container>\r\n                    </Container>\r\n                </Container>\r\n                {/* content area end */}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'react-dropdown/style.css';\r\nimport './style.css';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}